name: Check

on:
  pull_request:
  push:
    branches:
      - main

env:
  RUST_VERSION: "1.69"

jobs:
  format:
    name: Format

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Install Rust Toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt

      - name: Cache cargo resources
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: deps
          cache-on-failure: true

      - run: cargo fmt --all -- --check

  clippy:
    name: Clippy

    strategy:
      matrix:
        include:
          - target: aarch64-linux-android
            runner: ubuntu-latest
          - target: aarch64-apple-ios
            runner: macos-latest

    runs-on: ${{ matrix.runner }}

    steps:
      - uses: actions/checkout@v4
      - name: Install Rust Toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.RUST_VERSION }}
          targets: ${{ matrix.target }}
          components: clippy

      - name: Cache cargo resources
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: deps
          cache-on-failure: true

      - run: cargo clippy --target=${{ matrix.target }}

  audit:
    name: Audit

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Install Rust Toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo resources
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: deps
          cache-on-failure: true

      - run: cargo audit

  check:
    name: Check

    strategy:
      matrix:
        include:
          - target: aarch64-linux-android
            runner: macos-latest
          - target: aarch64-apple-ios
            runner: macos-latest

    runs-on: ${{ matrix.runner }}

    steps:
      - uses: actions/checkout@v4
      - name: Install Rust Toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.RUST_VERSION }}
          targets: ${{ matrix.target }}

      - name: Cache cargo resources
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: deps
          cache-on-failure: true

      - run: cargo check --target=${{ matrix.target }}


  test-android:
    name: Test Android

    # Using macos runner for hardware acceleration
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust Toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.RUST_VERSION }}
          targets: x86_64-linux-android

      - name: Install Cargo APK
        run: cargo install cargo-apk

      - name: Build Android Application
        run: cargo apk build --manifest-path ./examples/android/Cargo.toml --target=x86_64-linux-android

      - name: Run Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          arch: x86_64
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -no-snapshot-save
          script: ./.github/workflows/android_test.sh examples/android/target/debug/apk/android.apk
